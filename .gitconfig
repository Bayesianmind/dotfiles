[core]
        whitespace = trailing-space,space-before-tab
        pager = less -FRSX
        editor = emacsclient -t --create-frame
        excludesfile = /Users/aiden/.gitignore_global

[user]
        name = Aiden Scandella
        email = aiden@uber.com

[push]
        default = upstream

[diff]
        renames = copies
        mnemonicprefix = true

[branch]
        autosetuprebase = always

[branch "master"]
        rebase = true

[alias]
        add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
        amend = commit --amend
        ca = commit --amend
        cached = diff --cached
        edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f` +Gdiff"
        delmerged = "!git branch --merged |grep -v "\\*" | xargs -n 1 git branch -d"
        graph = log --oneline --graph
        ir = !git rebase -i origin/master
        l = log --decorate --stat
        lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
        lol = log --oneline --decorate
        patch = add -p
        refresh = !ssh-add -l && STASH=$(git stash) && git fetch && git rebase origin/master && test \"$STASH\" != \"No local changes to save\" && git stash pop
        rmb = !sh -c 'git branch -D $1 && git push origin :$1' -
        sha1 = rev-parse HEAD
        sha = !git rev-parse HEAD | cut -c 1-8
        showstash = stash show -p stash@{0}
        ten = log --oneline -n 10
        up = !git fetch origin && git rebase origin/master
        upstream = !git push -u origin $(git rev-parse --abbrev-ref HEAD)
        who = shortlog -n -s --no-merges
        files = show --pretty=format: --name-only
        thirty = log --oneline -n 30
	p = add -p
	unstage = reset HEAD

[color]
        ui = true

[log]
        decorate = short

[rerere]
        enabled = true

[rebase]
        autosquash = true

[pager]
        status = true
	show-branch = true
[help]
	autocorrect = 5
